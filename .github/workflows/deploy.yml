name: Deploy

on:
  push:
    tags:
      # Regex to match a version number
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin

          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-gnu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Get version
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
            # Replace with the name of your binary
            binary_name="chess_clock"

            dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
            mkdir "$dirname"
            if [ "${{ matrix.os }}" = "windows-latest" ]; then
              mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
            else
              mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
            fi

            if [ "${{ matrix.os }}" = "windows-latest" ]; then
              7z a "$dirname.zip" "$dirname"
              echo "ASSET=$dirname.zip" >> $GITHUB_ENV
            else
              tar -czf "$dirname.tar.gz" "$dirname"
              echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
            fi

      - name: Upload the binaries
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{ env.ASSET }}
